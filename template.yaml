AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Monitoring Amazon S3 Backups with CloudWatch Dashboards and Alarms

Parameters:
  MyBucket:
    Description: Amazon S3 Bucket to store backup data. MUST be globally unique. Please see S3 Bucket naming rules https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
    Type: String
    MinLength: 1
  MyEmailAddress:
    Description: SNS Subscription Email address to receive notifications from CloudWatch alarms of failed backups to S3. MUST be a valid email address.
    Type: String
    MinLength: 1
  MetricName:
    Description: The CloudWatch metric name that should be used. Can be any string
    Type: String
    MinLength: 1
    Default: "Backups"
  DimensionName:
    Description: The CloudWatch dimension name that should be used for the above metric, based on what each folder represents. E.g each folder can represent a System, Location, Customer, that you doig backups for. Can be any string.
    Type: String
    MinLength: 1
    Default: "System"
  BackupFrequencyPeriod:
    Description: What schedule/frequency does your backups run, e.g. Hourly, daily, weekly? MUST be represented in seconds. The default is 86400 seconds = 1 day
    Type: Number
    MinLength: 1
    ConstraintDescription: "Must be in seconds"
    Default: 86400
    
Globals: 
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.11
    CodeUri: monitor
    Architectures:
      - arm64 #Lambda function will run on Arm-based AWS Graviton processors
    Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE: BackupsMonitoring
          #POWERTOOLS_SERVICE_NAME: Backups #TODO see if this fixes the CloudWatch Math Search, but misses Logging info
          LOG_LEVEL: INFO
          SNSTopic: !Ref EmailNotificationsSNSTopic
          MetricName: MetricName
          DimensionName: DimensionName  

Resources:
  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${MyBucket}"
    
  CustomMetricsFunction:
    Type: AWS::Serverless::Function    
    Properties:
      Handler: metrics.lambda_handler
      Layers:
      - arn:aws:lambda:af-south-1:017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:45
      Events:
        BackupEvent:
          Type: S3
          Properties:
            Bucket:
              Ref: BackupBucket
            Events: s3:ObjectCreated:*
      Policies:
        - S3ReadPolicy:
            BucketName: !Sub "${MyBucket}"

  AlarmsFunction:
    Type: AWS::Serverless::Function    
    Properties:
      Handler: alarms.lambda_handler
      Layers:
      - arn:aws:lambda:af-south-1:017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:45
      Policies:
        - Statement:
          - Effect: "Allow"
            Action:
              - cloudwatch:PutMetricAlarm 
              - cloudwatch:ListMetrics
            Resource:
              - '*'
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *) #run every hour, on the hour (at the 0th minute)

  EmailNotificationsSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Sub "${MyEmailAddress}"
          Protocol: "email"

  CloudWatchDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties: 
      DashboardName: BackupsMonitoring #TODO: Paramatrise region and period
      DashboardBody: | #The | (pipe) indicates that everything below is a string literal
                  {
                      "periodOverride": "inherit",
                      "widgets": [
                          {
                            "type":"metric",
                            "x":0,
                            "y":0,
                            "width":12,
                            "height":10,
                            "properties":{
                                "metrics":[
                                  [ { "expression": "FILL(SEARCH(' {BackupsMonitoring, System} MetricName=\"Backups\" ', 'Sum'), 0)", "id": "e1" } ]
                                  ],
                                "period":3600,
                                "region":"af-south-1",
                                "title":"Backups to S3",
                                "legend": {
                                    "position": "right"
                                  }
                            }
                          }
                      ]
                    }          